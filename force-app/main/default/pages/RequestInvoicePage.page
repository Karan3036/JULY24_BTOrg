<apex:page controller="RequestInvoicePageController"   showheader="false" id="pageId">
    <apex:slds />
    <apex:includeLightning />
    <c:BT_JsAndCssIncludeComponent importJquery="true" importAppurinUtil="true" importJQueryLayout="true" importFancyTree="false"
        importJqGrid="false" importEasyTooltip="true" importAppurinCss="true" importCkEditor="false" importGnattChart="false"
        importLightningDesign="true" />

    <head>
        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>

        <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>

        <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css" />
        <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"/>
         <apex:includeScript value="{!$Resource.FileUploadJs}"/>
    </head>

    <style>
        .customPopup1 {
        background-color: white;
        border-style: solid;
        border-width: 2px;
        left: 20%;
        padding: 10px;
        position: absolute;
        z-index: 9999;
        width: 500px;
        top: 20%;
        }

        .disabledTextBox {
        background-color: white;
        border: 1px solid;
        color: black;
        cursor: default;
        width: 90px;
        display: table;
        padding: 2px 1px;
        text-align:right;
        }

        .closeButton {
        float: right;
        }
        .hideListButton {
            float: left;
        }

        .showListButton {
            float: left;
        }

        .bPageBlock {
            border-top: unset;
        }

        .customMargin{
            margin-top: 6px;
        }
        #buttonWidth{
            width: 164px;
        }

        .pbHeader {
            display: none;
        }

        .helpOrb {
            display: none;
        }

        .customPopup{
        background-color: lightgrey;
        border-style: solid;
        border-radius: 10px;
        border-width: 1px;
        left: 55%;
        position: fixed;
        padding: 5px;
        box-shadow: 0px 3px 7px rgba(1, 1, 1, 5);
        background: #fff;
        width: 600px;
        margin-left: -200px;
        top: 10px;
        max-width: 700px;
        }
        .customPopup .close{
        position: absolute;
        top: 10px;
        right: 10px;
        transition: all 200ms;
        font-size: 20px;
        text-decoration: none;
        color: #333;
        }
        .customPopup .close:hover{
        color: red;
        }

        .apexp .bPageBlock.apexDefaultPageBlock .pbBody .pbSubheader .hideListButton {
        background-position: 1px -36px;
        display: none !important;
        }

        .apexp .bPageBlock.apexDefaultPageBlock .pbBody .pbSubheader {
        border-top: 0;
        color: white;
        background-color: rgba(27, 82, 151, 1.0) !important;
        }

        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1000; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }
        
        .modal-content {
            /* background-color: #fefefe; */
            margin: 15% auto; /* 15% from the top and centered */
            padding: 15px;
            /* border: 1px solid #888; */
            width: 40%;
            height: auto;
            border-radius: 10px;
        }
        
        /* Close button */
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        .rkheader{
            text-align: center;
            border-bottom: 1px solid gray;
            font-size: large;
            font-family: monospace;
        }

        .rkbody{
            height: 10vh;
            text-align: center;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 17px;
        }

        .rkfooter{
            border-top: 1px solid gray;
            padding-top: 5px;
            text-align: center;
        }
    </style>
    <script>
        function submitQuote() {
            console.log('submitQuote');
            var input = document.getElementById('fileToUpload');
            var filelength = input.files.length;
            var agreeFunction;
            var confirmPromptOptions;
            if (filelength > 0) {
                agreeFunction = new Function("Appurin.lightning.hideModalPopup({'modalPopupId' : 'lightningInfoPopup'}); multiFiles(); return false;");
                confirmPromptOptions = {
                    'modalPopupId': 'lightningInfoPopup',
                    'title': 'Confirm',
                    'message': 'Are you sure you want to submit the Invoice?',
                    'agreeButtonLabel': 'Yes',

                    'discardButtonLabel': '{!JSENCODE($Label.buildertek__Cancel)}',
                    'agreeFunction': agreeFunction
                }
            } else {
                confirmPromptOptions = {
                    'modalPopupId': 'lightningInfoPopup1'
                }
            }
            Appurin.lightning.showConfirmPrompt(confirmPromptOptions);
        }

        function reloadPage() {
            console.log('reloadPage');
            window.location.reload();
        }

        function showFileNameField() {
            console.log('showFileNameField');
            var input = document.getElementById('fileToUpload');
            if (input.files.length > 0) {
                var file = input.files[0];
                document.getElementById('fileNameField').innerHTML = file.name;
                document.getElementById('fileNameId').value = file.name;
            }
        }

        var uploadFileData = [];

        function removeFiles(ind) {
            console.log('removeFiles');
            console.log('uploadFileData ==> ',{uploadFileData});
            var filelst = uploadFileData;
            var newFileList = [];
            document.getElementById('fileToUpload').disabled = false;

            for (var index = 0; index < filelst.length; index++) {
                if(ind != index) {
                    newFileList.push(filelst[index]);
                }
            }
            console.log({newFileList});

            uploadFileData = newFileList;
            document.getElementById('fileNameFieldId').innerHTML = null;

            for (let index = 0; index < newFileList.length; index++) {

                var file = newFileList[index]
                console.log('newFileList ==> ',{file});
                document.getElementById('fileError').style.display = 'none';
                document.getElementById('fileNameFieldId').innerHTML += `<img class="slds-button__icon slds-button__icon--left" src="{!$Resource.Close_Icon}" alt="remove" onclick="removeFiles(`+ index +`)"/>`+newFileList[index].name+`<br/>` ;
                document.getElementById('fileNameFieldId').style.display = 'block';

            }
            
            // Clear file input field
            document.getElementById('fileToUpload').value = '';
        }

        function fileSelected(){
            console.log('fileSelected');
            var temp = event.target;
            console.log('Event Data == >',{temp});
            var size = document.getElementById('fileToUpload');
            uploadFileData = size.files;
            if (size.files.length > 0) {
                // Remove existing content from file list display
                document.getElementById('fileNameFieldId').innerHTML = '';
                document.getElementById('fileError').style.display = 'none';
                document.getElementById('fileNameFieldId').style.display = 'block';
                
                // Display selected files
                for (let index = 0; index < size.files.length; index++) {
                    var file = document.getElementById('fileToUpload').files[index];
                    if (file) {
                        document.getElementById('fileError').style.display = 'none';
                        document.getElementById('fileNameFieldId').innerHTML += `<img class="slds-button__icon slds-button__icon--left" src="{!$Resource.Close_Icon}" alt="remove" onclick="removeFiles(${index})"/> ${file.name} <br/>` ;
                    } else {
                        // Handle case if file is not available
                    }
                }
            }
        }


        function upload(){
            console.log('upload');
            var file = document.getElementById('fileToUpload').files[0];
            if(file){
                var reader = new FileReader();
                reader.onload = loaded;
                reader.onerror = errorHandler;
                reader.readAsDataURL(file);
            }else{
                document.getElementById('fileError').style.display = 'block';
            }

        }

        function multiFiles() {
            console.log('multiFiles');
            if (uploadFileData != undefined && uploadFileData.length > 0) {
                console.log('uploadFileData @@ ',{uploadFileData});
                var fileData = uploadFileData[0];
                var reader = new FileReader();
                reader.onload = multiFilesLoad;
                reader.onerror = errorHandler;
                reader.readAsDataURL(fileData);
            }
        }

        function multiFilesLoad(evt) {
            console.log('multiFilesLoad');
            var fileData = uploadFileData[0];
            console.log('fileData ',{fileData});
            var filename = fileData.name;
            var fileType = fileData.type;
            var fileSize = fileData.size;
            var fileContent = String(evt.target.result);

            console.log('fileContent ==> '+fileContent);
            fileContent = fileContent.substr(fileContent.indexOf(',') + 1);
            uploadContentVersion(filename, fileContent, fileSize, fileType);
        }



        function loaded(evt) {
            console.log('loaded');
            var filename = document.getElementById('fileToUpload').files[0].name;
            var fileType = document.getElementById('fileToUpload').files[0].type;
            var fileSize = document.getElementById('fileToUpload').files[0].size;
            var fileContent = String(evt.target.result);
            fileContent = fileContent.substr(fileContent.indexOf(',') + 1);
            uploadContentVersion(filename, fileContent, fileSize, fileType);
        }

        function errorHandler(evt) {
            console.log('errorHandler');
            if (evt.target.error.name == 'NotReadableError') {
                alert('File could not be read');
            }
            else {
                alert(evt.target.error);
            }
        }

        function uploadContentVersion(filename, filecontent, fileSize, fileType) {
            uploadFileToPurchaseorder(filename, encodeURIComponent(filecontent), fileSize, fileType);
        }

        function closeWindow() {
            document.getElementById('fileToUpload').value = null;
            document.getElementById('fileNameField').innerHTML = '';
            document.getElementById('fileError').style.display = 'none';
            document.getElementById('fileNameFieldId').innerHTML = '';
            document.getElementById('fileNameFieldId').style.display = 'none';
            document.getElementById("idDialog").className = document.getElementById("idDialog").className.replace(/(?:^|\s)slds-fade-in-open(?!\S)/g, ' slds-fade-in-close');
            document.getElementById("idBackDrop").className = document.getElementById("idBackDrop").className.replace(/(?:^|\s)slds-modal-backdrop--open(?!\S)/g, ' slds-modal-backdrop--close');
            var confirmPromptOptions = {'modalPopupId': 'lightningInfoPopup2'}
            Appurin.lightning.showConfirmPrompt(confirmPromptOptions);
        }

        function handleComplete() {
            console.log('handleComplete---->');
            var confirmPromptOptions = {'modalPopupId': 'lightningInfoPopup2'}
            Appurin.lightning.showConfirmPrompt(confirmPromptOptions);
    
    }

    function closeModal() {
            document.getElementById('myModal').style.display = 'none';
        }
    </script>
    <apex:form id="form" html-autocomplete="off">

        <apex:actionStatus id="splashStatus" onstart="startSplash();" onstop="endSplash(); " />

        <apex:actionFunction name="uploadFileToPurchaseorder" action="{!uploadFileToPurchaseorder}" status="splashStatus" rerender="form,iserrorMessage">
            <apex:param name="firstParam" value="" assignTo="{!latestFileName}"/>
            <apex:param name="secondParam" value="" assignTo="{!fileContents}"/>
            <apex:param name="filesize" value="" assignTo="{!fileSize}"/>
            <apex:param name="filetype" value="" assignTo="{!fileType}"/>
        </apex:actionFunction>

        <div class="slds slds-scope">
            <div id="splashDiv" class="apInitiallyDivDisplayNone" style="z-index:9998;">
                <div class="slds-spinner_container apLightningSpinnerContainer">
                    <div role="status" class="slds-spinner slds-spinner--medium slds-spinner--brand">
                        <span class="slds-assistive-text">Loading</span>
                        <div class="slds-spinner__dot-a"></div>
                        <div class="slds-spinner__dot-b"></div>
                    </div>
                </div>
            </div>
        </div>

        <apex:outputPanel rendered="{!iserrorMessage == true}" id="iserrorMessage">
            <apex:outputPanel rendered="{!iserrorMessage == true}">
                <div class="slds-notify slds-notify_alert slds-alert_error" role="alert">
                    <span class="slds-assistive-text">error</span>
                    <h2>
                        {!errorMessage}
                    </h2>
                </div>
            </apex:outputPanel>
        </apex:outputPanel>

        <apex:outputPanel layout="block" id="errorModal" style="display: {!IF(errorMessageVisible, 'block', 'none')}">
            <div class="customPopup">
                <span class="close" onclick="closeErrorModal()">&times;</span>
                <h2>Error</h2>
                <p>{!errorMessage}</p>
            </div>
        </apex:outputPanel>

        <div class="slds-scope" style="width:80%;margin: 0 auto;padding: 10px 50px;">
            <div class="slds-box">
                <apex:outputPanel>
                    <div>
                        <span>
                            <c:DisplayImageInTemplate />
                        </span>
                        <span>
                            <center>
                                <b>
                                    <ul>
                                        <h2 style="font-size: 1.3rem;text-transform: uppercase;text-decoration: underline;margin-top: -25px;">SUBMIT YOUR INVOICE TO {!purchaseOrderRecord.Name}</h2>
                                    </ul>
                                </b>
                            </center>
                            <br/>

                        </span>
                    </div>
                </apex:outputPanel>


                <apex:pageBlock title="PO Page">
                    <div>
                        <apex:pageBlockSection title="PO Details" columns="2">
                            <apex:outputField value="{!purchaseOrderRecord.buildertek__Project__r.Name}" />
                            <apex:outputField value="{!purchaseOrderRecord.Name}" />
                            <apex:outputField value="{!purchaseOrderRecord.buildertek__Vendor__r.Name}" />
                            <apex:outputField value="{!purchaseOrderRecord.buildertek__PO_Total__c}" />
                            <apex:outputField value="{!purchaseOrderRecord.buildertek__Description__c}" />
                        </apex:pageBlockSection>
                    </div>
                    <br/>
                    <div class="slds-box" style="overflow:auto;max-height: 42vh !important;">
                        <b>
                            <div class="slds-badge" style="font-size: 0.8rem;border-radius: 0 !important;">PO Lines</div>
                        </b>

                        <table width="100%" class="slds-table slds-table_bordered slds-table_cell-buffer">
                            <thead>
                                <tr class="slds-text-title_caps">
                                    <th scope="col" width="20%">
                                        Line Item
                                    </th>
                                    <!-- <th scope="col" width="23%">
                                        Product
                                    </th> -->
                                    <th scope="col" width="23%">
                                        Description
                                    </th>
                                    <th scope="col" width="10%">
                                        Quantity
                                    </th>
                                    <th scope="col" width="10%">
                                        Unit Price({!companycurrency})
                                    </th>
                                    <th scope="col" width="10%">
                                        Total Price({!companycurrency})
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <apex:variable value="{!0}" var="rowNum" />
                                <apex:repeat value="{!poLineRecord}" var="item">
                                    <tr>
                                        <td style="white-space: normal">
                                            <apex:outputField value="{!item.Name}" />
                                        </td>
                                        <!-- <td style="white-space: normal">
                                            <apex:outputField value="{!item.buildertek__Product__c}" />
                                        </td> -->
                                        <td>
                                            <apex:outputField value="{!item.buildertek__Description__c}" styleClass="slds-input"/>
                                        </td>
                                        <td>
                                            <apex:outputField value="{!item.buildertek__Quantity__c}" style="width:100px;"/>
                                        </td>
                                        <td>
                                            <apex:outputField value="{!item.buildertek__Unit_Price__c}" styleClass="slds-input" style="width:100px;"/>
                                        </td>
                                        <td>
                                            <apex:outputField value="{!item.buildertek__Total_Price__c}" styleClass="slds-input" style="width:100px;"/>
                                        </td>
                                    </tr>
                                </apex:repeat>
                            </tbody>
                        </table>
                    </div>
                </apex:pageBlock>
                <apex:outputPanel id="pb2">
                    <br/>
                    <div class="slds-box">
                        <b>
                        <div class="slds-badge" style="background-color: #e0e5ee;font-size: 0.8rem;border-radius: 0 !important;">Vendor Invoice</div>

                        <div class="slds-file-selector__dropzone customMargin">
                            <input id="fileToUpload" type="file" name="file" class="slds-file-selector__input slds-assistive-text"
                                     aria-describedby="fileLabel" onchange="fileSelected()" />
                            <label class="slds-file-selector__body" for="fileToUpload">
                                <div class="slds-file-selector__button slds-button slds-button_brand" id="buttonWidth">
                                    <img class="slds-button__icon slds-button__icon--left" src="{!$Resource.RequestImageUploaderImg}"/>
                                    Upload New Files
                                </div>
                                <div styleClass="slds-file-selector__text">
                                    <!-- or Drop Files -->
                                </div>
                            </label>
                            <div id="fileNameFieldId" style="display: none" class="slds-text-body_small slds-text-color_success"></div>
                            <div id="fileError" style="display:none;" class="slds-text-body_small slds-text-color_error">{!$Label.Please_Select_File}</div>
                        </div>
                    </b>
                    </div>
                    <br/>
                    <center>
                        <button type="button" class="slds-button slds-button_neutral" onclick="window.close();">Close</button>
                        <button type="button" class="{!if(ShowSubmitButton,'slds-hide','slds-button slds-button_brand')}" onclick="submitQuote();">Submit</button>
                    </center>
                </apex:outputPanel>
            </div>

            <apex:outputPanel layout="block" id="lightningInfoPopup" style="display: none; z-index: 8552;">
                <div class="apModal" style="z-index: 8551;">
                    <div class="apModalContainer">
                        <div class="apModalHeader">
                            <button id="lightningInfoPopupCloseIcon" class="slds-button slds-modal__close slds-button--icon-inverse" onClick="Appurin.lightning.hideModalPopup({'modalPopupId':'{!JSENCODE($Component.lightningInfoPopup)}'}); return false;"
                                title="{!$Label.Close}">
                                <!-- <c:BT_LightningSvg parentId="lightningInfoPopupCloseIcon" styleClass="slds-button__icon slds-button__icon--large" path="/assets/icons/utility-sprite/svg/symbols.svg#close"/> -->
                                <span class="slds-assistive-text">{!$Label.Close}</span>
                            </button>
                            <h2 class="apModalHeading" id="lightningInfoPopupHeader">{$Label.Warning}</h2>
                        </div>
                        <div class="apModalContent">
                            <div class="apNotifyContainer" style="position: relative; text-align:center;">
                                <div>
                                    <h2 id="lightningInfoPopupMessage"></h2>
                                </div>
                            </div>
                        </div>
                        <div class="apModalFooter">
                            <button id="lightningInfoPopupOkButton">{!$Label.Ok}</button>
                            <button id="lightningInfoPopupCloseButton">{!$Label.Close}</button>
                        </div>
                    </div>
                </div>
                <div class="slds-backdrop slds-backdrop--open" style="z-index: 5881;"></div>
            </apex:outputPanel>
            <apex:outputPanel layout="block" id="lightningInfoPopup1" style="display: none; z-index: 8552;">
                <div class="apModal" style="z-index: 8551;">
                    <div class="apModalContainer">
                        <div class="apModalHeader">
                            <button id="lightningInfoPopupCloseIcon" class="slds-button slds-modal__close slds-button--icon-inverse" onClick="Appurin.lightning.hideModalPopup({'modalPopupId':'{!JSENCODE($Component.lightningInfoPopup1)}'}); return false;"
                                title="{!$Label.Close}">
                                <c:BT_LightningSvg parentId="lightningInfoPopupCloseIcon" styleClass="slds-button__icon slds-button__icon--large" path="/assets/icons/utility-sprite/svg/symbols.svg#close"/>
                                <span class="slds-assistive-text">{!$Label.Close}</span>
                            </button>
                            <h2 class="apModalHeading" id="lightningInfoPopupHeader">Error</h2>
                        </div>
                        <div class="apModalContent">
                            <div class="apNotifyContainer" style="position: relative; text-align:center;">
                                <div>
                                    <h2 id="lightningInfoPopupMessage">Please upload an Invoice</h2>
                                </div>
                            </div>
                        </div>
                        <div class="apModalFooter">
                            <button id="lightningInfoPopupCloseButton" onClick="Appurin.lightning.hideModalPopup({'modalPopupId':'{!JSENCODE($Component.lightningInfoPopup1)}'}); return false;">Close</button>
                        </div>
                    </div>
                </div>
                <div class="slds-backdrop slds-backdrop--open" style="z-index: 5881;"></div>
            </apex:outputPanel>
            <div id="myModal" class="modal" style="{!IF(isModalVisible, 'display: block;', 'display: none;')}">
                <div class="modal-content">
                    <div class="rkheader slds-modal__header">
                        <h2 style="margin-bottom: 1px;" class="slds-text-heading--medium">{!modalTitle}</h2>
                    </div>
                    <div class="rkbody slds-modal__content slds-p-around--medium">
                        <p>{!modalMessage}</p>
                    </div>
                    <div class="rkfooter slds-modal__footer">
                        <button type="button" class="slds-button slds-button_neutral" onclick="closeModal()">{!modalButtonLabel}</button>
                    </div>
                </div>
            </div>
            <div class="slds-modal-backdrop slds-modal-backdrop--close" id="idBackDrop"></div>
        </div>


        <div class="slds-modal-backdrop slds-modal-backdrop--close" id="idBackDrop1"></div>
    </apex:form>
</apex:page>